[project]
name = "graid"
version = "0.1.0"
description = "GRAID: Generating Reasoning questions from Analysis of Images via Discriminative artificial intelligence - A framework for VQA generation from real world images"
authors = [
    { name = "Karim Elmaaroufi", email = "elmaaroufi@berkeley.edu" },
    { name = "Liheng Lai", email = "liheng@berkeley.edu" },
]
requires-python = ">=3.9"
readme = "README.md"
license = "Apache-2.0"
keywords = [
    "vision-language-models",
    "VLM",
    "robotics",
    "scene-understanding",
    "depth-estimation",
    "object-detection",
    "graid",
]
dependencies = [
    "torch==2.5.0",
    "torchaudio==2.5.0",
    "torchvision>=0.20.0",
    "transformers>=4.45.2,<5",
    "ultralytics>=8.3.21,<9",
    "opencv-python>=4.10.0.84,<5",
    "torchmetrics>=1.6.0,<2",
    "sqlitedict>=2.1.0,<3",
    "numpy>=1.26.4",
    "fairscale>=0.4.13,<0.5",
    "ijson>=3.3.0,<4",
    "openai>=1.69.0,<2",
    "google-genai>=1.8.0,<2",
    "segment-anything",
    "outlines==0.1.11",
    "dotenv>=0.9.9,<0.10",
    "guidance==0.2.0",
    "timm>=1.0.15,<2",
    "tenacity>=9.1.2,<10",
    "anthropic>=0.51.0,<0.52",
    "pick>=2.4.0,<3",
    "typer>=0.16.0,<0.17",
    "rich>=13.0.0,<14",
    "clip",
    "wandb>=0.20.1,<0.21",
    "sentence-transformers>=4.1.0,<5",
    "datasets (>=4.0.0,<5.0.0)",
    "ensemble-boxes (>=1.0.9,<2.0.0)",
    "supervision (>=0.26.1,<0.27.0)",
    "pycocotools>=2.0.10",
    "matplotlib>=3.9.4",
    "wheel>=0.40.0",
]

[tool.setuptools.packages.find]
where = ["graid/src"]
include = ["graid*"]

[project.scripts]
install_depth_pro = "graid.setup:install_depth_pro"
install_detectron2 = "graid.setup:install_detectron2"
install_mmdetection = "graid.setup:install_mmdetection"
install_dino = "graid.setup:install_idea_dino"
install_all = "graid.setup:install_all"
clean_all = "graid.setup:clean_all"
clean_depth_pro = "graid.setup:clean_depth_pro"
clean_detectron2 = "graid.setup:clean_detectron2"
clean_mmdetection = "graid.setup:clean_mmdetection"
clean_dino = "graid.setup:clean_idea_dino"
download_nuscenes = "graid.setup:download_nuscenes"
download_bdd = "graid.setup:download_bdd"
download_nuimages = "graid.setup:download_nuimages"
graid = "graid.graid:app"

[dependency-groups]
dev = [
    "isort>=5.13.2,<6",
    "black>=24.10.0,<25",
    "flake8-bugbear>=24.10.31,<25",
    "flake8-annotations>=3.1.1,<4",
    "nbconvert>=7.16.4,<8",
    "pyarrow>=18.1.0,<19",
    "ipykernel>=6.29.5,<7",
    "gdown>=5.2.0,<6",
    "pytest>=8.4.0,<9",
    "pytest-xdist>=3.8.0",
    "nuscenes-devkit>=1.1.9",
]
mmdetection = ["openmim>=0.3.9,<0.4"]

[tool.uv]
default-groups = [
    "dev",
    "mmdetection",
]

[tool.uv.sources]
segment-anything = { git = "https://github.com/facebookresearch/segment-anything.git" }
clip = { git = "https://github.com/openai/CLIP.git" }

[tool.hatch.build.targets.sdist]
include = ["graid/src/graid"]

[tool.hatch.build.targets.wheel]
include = ["graid/src/graid"]

[tool.hatch.build.targets.wheel.sources]
"graid/src/graid" = "graid"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.isort]
profile = "black"
