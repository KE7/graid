[tool.poetry]
name = "graid"
version = "0.1.0"
description = "GRAID: Generating Reasoning questions from Analysis of Images via Discriminative artificial intelligence - A framework for VLM scene understanding in robotics and autonomous driving"
authors = ["Karim Elmaaroufi <elmaaroufi@berkeley.edu>", "Liheng Lai <liheng@berkeley.edu>"]
keywords = ["vision-language-models", "VLM", "robotics", "autonomous-driving", "scene-understanding", "depth-estimation", "object-detection", "graid"]
license = "Apache 2.0"
readme = "README.md"
packages = [{include = "graid", from = "graid/src"}]

[tool.poetry.dependencies]
python = ">=3.9"
torch = "2.5.0"
transformers = "^4.45.2"
ultralytics = "^8.3.21"
opencv-python = "^4.10.0.84"
torchmetrics = "^1.6.0"
sqlitedict = "^2.1.0"
numpy = "1.26.4"
ray = "^2.43.0"
fairscale = "^0.4.13"
ijson = "^3.3.0"
openai = "^1.69.0"
google-genai = "^1.8.0"
segment-anything = {git = "https://github.com/facebookresearch/segment-anything.git"}
outlines = "0.1.11"
dotenv = "^0.9.9"
guidance = "0.2.0"
timm = "^1.0.15"
tenacity = "^9.1.2"
anthropic = "^0.51.0"
pick = "^2.4.0"
typer = {extras = ["all"], version = "^0.16.0"}
rich = "^13.0.0"


[tool.poetry.scripts]
install_depth_pro  = "graid.setup:install_depth_pro"
install_detectron2 = "graid.setup:install_detectron2"
install_mmdetection = "graid.setup:install_mmdetection"
install_dino = "graid.setup:install_idea_dino"  
install_all = "graid.setup:install_all"
clean_all = "graid.setup:clean_all"
clean_depth_pro = "graid.setup:clean_depth_pro"
clean_detectron2 = "graid.setup:clean_detectron2"
clean_mmdetection = "graid.setup:clean_mmdetection"
clean_dino = "graid.setup:clean_idea_dino"
download_nuscenes = "graid.setup:download_nuscenes"
download_bdd = "graid.setup:download_bdd"
download_nuimages = "graid.setup:download_nuimages"
graid = "graid.graid:app"


[tool.poetry.group.dev.dependencies]
isort = "^5.13.2"
black = "^24.10.0"
flake8-bugbear = "^24.10.31"
flake8-annotations = "^3.1.1"
nbconvert = "^7.16.4"
pyarrow = "^18.1.0"
ipykernel = "^6.29.5"
gdown = "^5.2.0"
pytest = "^8.4.0"


[tool.poetry.group.mmdetection.dependencies]
openmim = "^0.3.9"

[build-system]
requires = [ "setuptools", "wheel", "torch"]
build-backend = "setuptools.build_meta:__legacy__"

[tool.isort]
profile = "black"